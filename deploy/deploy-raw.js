const {Wallet, ContractFactory, providers: {JsonRpcProvider}} = require("ethers")
const fs = require("fs-extra")

async function main() {
    // Deploy the Ganache server!
    const provider = new JsonRpcProvider("http://127.0.0.1:7545");
    const wallet = new Wallet("c59d3c5f894b084f84dd85ad380e620c2071deac79f63866e7bd1df1d8490187", provider);

    const nonce = await wallet.getTransactionCount()
    const sentTxRes = await wallet.sendTransaction({
        nonce,
        gasPrice: 20000000000,
        gasLimit: 6721975,
        value: 0,
        to: null,
        data: "0x60a060405234801561001057600080fd5b50738a753747a1fa494ec906ce90e9f37563a8af630e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516107cd6100b4600039600061016701526107cd6000f3fe60806040526004361061002d5760003560e01c80633ccfd60b146100ef5780636b69a59214610106576100ea565b366100ea576802b5e3af16b188000061004534610131565b1015610086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007d906103a8565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055005b600080fd5b3480156100fb57600080fd5b50610104610165565b005b34801561011257600080fd5b5061011b61029b565b60405161012891906103e1565b60405180910390f35b60008061013c6102a8565b9050670de0b6b3a76400008184610153919061042b565b61015d91906104b4565b915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101ea576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610251576000600182815481106102105761020f6104e5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905050808061024990610514565b9150506101ed565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610298573d6000803e3d6000fd5b50565b6802b5e3af16b188000081565b600080738a753747a1fa494ec906ce90e9f37563a8af630e73ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561030a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032e9190610605565b5050509150506402540be400816103459190610680565b91505090565b600082825260208201905092915050565b7f6469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b600061039260128361034b565b915061039d8261035c565b602082019050919050565b600060208201905081810360008301526103c181610385565b9050919050565b6000819050919050565b6103db816103c8565b82525050565b60006020820190506103f660008301846103d2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610436826103c8565b9150610441836103c8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561047a576104796103fc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006104bf826103c8565b91506104ca836103c8565b9250826104da576104d9610485565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061051f826103c8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610551576105506103fc565b5b600182019050919050565b600080fd5b600069ffffffffffffffffffff82169050919050565b61058081610561565b811461058b57600080fd5b50565b60008151905061059d81610577565b92915050565b6000819050919050565b6105b6816105a3565b81146105c157600080fd5b50565b6000815190506105d3816105ad565b92915050565b6105e2816103c8565b81146105ed57600080fd5b50565b6000815190506105ff816105d9565b92915050565b600080600080600060a086880312156106215761062061055c565b5b600061062f8882890161058e565b9550506020610640888289016105c4565b9450506040610651888289016105f0565b9350506060610662888289016105f0565b92505060806106738882890161058e565b9150509295509295909350565b600061068b826105a3565b9150610696836105a3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156106d5576106d46103fc565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610712576107116103fc565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561074f5761074e6103fc565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561078c5761078b6103fc565b5b82820290509291505056fea2646970667358221220829d51eae8b109e3609415ba76b624cc6e19b1e01304a6acf35a9f2e5e7a998264736f6c634300080f0033",
        chainId: 1337, // Chain ID is different from network id for some reason 5777,
    })
    const transactionReceipt = await sentTxRes.wait(1) // wait for a number of blocks to be confirmed
    console.log(transactionReceipt)
}

main()
    .then(() => process.exit(0))
    .catch(err => {
        console.error(err)
        process.exit(1)
    })